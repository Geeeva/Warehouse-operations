{"version":3,"sources":["assets/images/cover.png","components/Menu/Menu.js","components/Home/Home.js","components/Documents/TableRow/TableRow.js","components/Documents/Pagination/Pagination.js","components/Documents/TableSettings/TableSettings.js","components/Documents/TableSettingsButton/TableSettingsButton.js","components/Documents/DocumentDetails/DocumentDetails.js","components/Documents/Documents.js","components/About/About.js","components/NotFound/NotFound.js","components/Footer/Footer.js","containers/App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["module","exports","__webpack_require__","p","Menu","react_default","a","createElement","className","react_router_dom","to","exact","activeStyle","color","onClick","this","props","documentsDisplayHandler","Component","connect","state","documentsDisplay","dispatch","type","home","TableRow","_this","documentDetailsHandler","row","_id","dateOfCreation","substr","dateOfRecording","status","transactionType","businessPartner","name","businessPartnerLocation","address","year","documentId","Pagination","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","nextHandler","maxPages","_this2","pageNumbers","i","push","renderPageNumbers","map","number","currentPage","key","id","event","currentPageHandler","target","textContent","previousHandler","TableSettings","toggle","checked","onChange","dateOfCreationHandler","dateOfRecordingHandler","statusHandler","transactionTypeHandler","businessPartnerHandler","businessPartnerLocationHandler","yearHandler","TableSettingsButton","toggleHandler","documentDetails","monthSliced","document","slice","monthExtracted","monthName","dayOfTheWeekName","daySliced","startsWith","entries","1","2","3","4","5","6","7","8","9","10","11","12","m","extractedDate","dayOfTheWeek","Date","getDay","0","day","city","DocumentDetails_this","transformed","placeholder","maxLength","value","search","required","updatedSearch","bind","Documents","data","length","Math","ceil","indexOfLastElement","indexOfFirstElement","currentPageContent","documents","renderCurrentDocuments","Documents_TableRow_TableRow","renderCurrentDocument","filter","console","log","DocumentDetails","Documents_Pagination_Pagination","Documents_TableSettings_TableSettings","Documents_TableSettingsButton_TableSettingsButton","sortByStringHandler","about","notfound","footer","App","directionName","setState","sort","b","asc","defineProperty","basename","src","Cover","alt","components_Menu_Menu","react_router","path","strict","component","Home","render","components_Documents_Documents","assign","About","NotFound","Footer","Boolean","window","location","hostname","match","initialState","documentDetailsDisplay","reducer","arguments","undefined","action","objectSpread","parseInt","store","createStore","ReactDOM","es","containers_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c2d3ec40.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cover.f0466ca5.png\";","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass Menu extends Component {\r\n    render () {\r\n        return (\r\n            <nav>\r\n                <ul className=\"menu\">\r\n                    <NavLink className=\"home\" to=\"/\" exact activeStyle={{color: '#000000'}}><li>Home</li></NavLink>\r\n                    <NavLink className=\"documents\" to=\"/documents\" exact activeStyle={{color: '#000000'}}><li onClick={this.props.documentsDisplayHandler}>Documents</li></NavLink>\r\n                    <NavLink className=\"about\" to=\"/about\" exact activeStyle={{color: '#000000'}}><li>About</li></NavLink>\r\n                </ul>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n\t\tdocumentsDisplay: state.documentsDisplay\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        documentsDisplayHandler: () => dispatch({type: 'DOCUMENTS_DISPLAY'}),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);","import React from 'react';\r\n\r\nconst home = () => {\r\n    return (\r\n        <div className=\"home-route\">\r\n            <h1>Welcome to Warehouse Operations</h1>\r\n            <p>Use this application to view and manage receipt and delivery documents.</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default home;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nclass TableRow extends Component {\r\n\t\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<tr onClick={() => this.props.documentDetailsHandler(this.props.row._id)}>\r\n\t\t\t\t<td className={!this.props.dateOfCreation ? \"invisible\" : \"\"}>{this.props.row.dateOfCreation.substr(0, 10)}</td>\r\n\t\t\t\t<td className={!this.props.dateOfRecording ? \"invisible\" : \"\"}>{this.props.row.dateOfRecording.substr(0, 10)}</td>\r\n\t\t\t\t<td className={!this.props.status ? \"invisible\" : \"\"}>{this.props.row.status}</td>\r\n\t\t\t\t<td className={!this.props.transactionType ? \"invisible\" : \"\"}>{this.props.row.transactionType}</td>\r\n\t\t\t\t<td className={!this.props.businessPartner ? \"invisible\" : \"\"}>{this.props.row.businessPartner.name}</td>\r\n\t\t\t\t<td className={!this.props.businessPartnerLocation ? \"invisible\" : \"\"}>{this.props.row.businessPartner.address}</td>\r\n\t\t\t\t<td className={!this.props.year ? \"invisible\" : \"\"}>{this.props.row.year}</td>\r\n\t\t\t</tr>\r\n\t\t)\r\n\t}\t\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dateOfCreation:  state.dateOfCreation,\r\n        dateOfRecording: state.dateOfRecording,\r\n        status:          state.status,\r\n        transactionType: state.transactionType,\r\n        businessPartner: state.businessPartner,\r\n        businessPartnerLocation: state.businessPartnerLocation,\r\n\t\tyear:            state.year,\r\n\t\tdocumentsDisplay: state.documentsDisplay\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        documentDetailsHandler: (documentId) => dispatch({type: 'DOCUMENT_DETAILS_DISPLAY', documentId}),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableRow);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Pagination extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.props.nextHandler(this.props.maxPages);\r\n    }\r\n\r\n    render () {   \r\n        const pageNumbers = [];\r\n        for (let i = 1; i <= this.props.maxPages; i++) {\r\n            pageNumbers.push(i);\r\n        }\r\n        const renderPageNumbers = pageNumbers.map(number => {\r\n            return (\r\n                <li\r\n                    className={(this.props.currentPage === number? 'active' : '')}\r\n                    key={number}\r\n                    id={number}\r\n                    onClick={(event) => this.props.currentPageHandler(event.target.textContent)}\r\n                >\r\n                {number}\r\n              </li>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"pagination\">\r\n                <button onClick={this.props.previousHandler}>&#8249;</button>\r\n                <ul className=\"numbers\">{renderPageNumbers}</ul>\r\n                <button className=\"next\" onClick={() => this.props.nextHandler(this.props.maxPages)}>&#8250;</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentPage: state.currentPage,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        nextHandler: (maxPages) => dispatch({type: 'NEXT_PAGE', maxPages}),\r\n        currentPageHandler: (number) => dispatch({type: 'SET_CURRENT_PAGE', number}),\r\n        previousHandler: () => dispatch({type: 'PREVIOUS_PAGE'}),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Pagination);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nclass TableSettings extends Component {\r\n    render () {   \r\n        return (\r\n            <div className={\"table-settings\" + (this.props.toggle ? ' invisible' : '')}>\r\n                <label>\r\n                    Date of Creation:\r\n                <input\r\n                    name=\"dateOfCreation\"\r\n                    type=\"checkbox\"\r\n                    checked={this.props.dateOfCreation}\r\n                    onChange={this.props.dateOfCreationHandler}/>\r\n                </label>\r\n                <label>\r\n                    Date of Recording:\r\n                <input\r\n                    name=\"dateOfRecording\"\r\n                    type=\"checkbox\"\r\n                    checked={this.props.dateOfRecording}\r\n                    onChange={this.props.dateOfRecordingHandler} />\r\n                </label>\r\n                <label>\r\n                    Status:\r\n                <input\r\n                    name=\"status\"\r\n                    type=\"checkbox\"\r\n                    checked={this.props.status}\r\n                    onChange={this.props.statusHandler} />\r\n                </label>\r\n                <label>\r\n                    Transaction type:\r\n                <input\r\n                    name=\"transactionType\"\r\n                    type=\"checkbox\"\r\n                    checked={this.props.transactionType}\r\n                    onChange={this.props.transactionTypeHandler} />\r\n                </label>\r\n                <label>\r\n                    Business Partner:\r\n                <input\r\n                    name=\"businessPartner\"\r\n                    type=\"checkbox\"\r\n                    checked={this.props.businessPartner}\r\n                    onChange={this.props.businessPartnerHandler} />\r\n                </label>\r\n                <label>\r\n                    Business Partner Location:\r\n                <input\r\n                    name=\"businessPartnerLocation\"\r\n                    type=\"checkbox\"\r\n                    checked={this.props.businessPartnerLocation}\r\n                    onChange={this.props.businessPartnerLocationHandler} />\r\n                </label>\r\n                <label>\r\n                    Year:\r\n                <input\r\n                    name=\"year\"\r\n                    type=\"checkbox\"\r\n                    checked={this.props.year}\r\n                    onChange={this.props.yearHandler} />\r\n                </label>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        toggle: state.toggle,\r\n        dateOfCreation:  state.dateOfCreation,\r\n        dateOfRecording: state.dateOfRecording,\r\n        status:          state.status,\r\n        transactionType: state.transactionType,\r\n        businessPartner: state.businessPartner,\r\n        businessPartnerLocation: state.businessPartnerLocation,\r\n        year:            state.year,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        dateOfCreationHandler: () => dispatch({type: 'DATE_OF_CREAT'}),\r\n        dateOfRecordingHandler: () => dispatch({type: 'DATE_OF_RECORD'}),\r\n        statusHandler: () => dispatch({type: 'STATUS'}),\r\n        transactionTypeHandler: () => dispatch({type: 'TRANSACTION_TYPE'}),\r\n        businessPartnerHandler: () => dispatch({type: 'BUSINESS_PARTNER'}),\r\n        businessPartnerLocationHandler: () => dispatch({type: 'BUSINESS_PARTNER_LOC'}),\r\n        yearHandler: () => dispatch({type: 'YEAR'}),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableSettings);","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nclass TableSettingsButton extends Component {\r\n    render() {\r\n        return (\r\n            <button className={\"table-settings-button\" + (!this.props.toggle ? \" close\" : \"\")} onClick={this.props.toggleHandler}>\r\n            {this.props.toggle ? \"Open table settings\" : \"Close table settings\"}\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        toggle: state.toggle\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        toggleHandler: () => dispatch({type: 'TOGGLE'}),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableSettingsButton);","import React from 'react';\r\nconst documentDetails = props => {\r\n    const year = props.document.dateOfCreation.slice(0, 4);\r\n\r\n    const months = {1: \"January\", 2: \"February\", 3: \"March\", 4: \"April\", 5: \"May\", 6: \"June\", 7: \"July\", 8: \"August\", 9: \"September\", 10: \"October\",\r\n    11: \"November\", 12: \"Decmber\"};\r\n\r\n    const days = {0: \"Sunday\", 1: \"Monday\", 2: \"Tuesday\", 3: \"Wednesday\", 4: \"Thursday\", 5: \"Friday\", 6: \"Saturday\"};\r\n\r\n    const monthExtracted = props.document.dateOfCreation.slice(5, 7);\r\n    let monthSliced;\r\n    let monthName = \"\";\r\n    let dayOfTheWeekName = '';\r\n    let daySliced = props.document.dateOfCreation.slice(5, 7);\r\n    if(monthExtracted.startsWith(\"0\")){\r\n        monthSliced = monthExtracted.slice(1, 3);\r\n    }\r\n\r\n    Object.entries(months).map(m =>{\r\n        if(m[0] === monthSliced){\r\n            return monthName = m[1];\r\n        }\r\n    });\r\n\r\n    const extractedDate = props.document.dateOfCreation.slice(0, 10);\r\n    const date = new Date(extractedDate);\r\n    const dayOfTheWeek = date.getDay();\r\n  \r\n    Object.entries(days).map(day => {\r\n        if(day[0] === dayOfTheWeek){\r\n            return dayOfTheWeekName = day[1];\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className=\"document-details-wrapper\">\r\n            <div className=\"status-wrapper\">\r\n                <div>\r\n                    <p>Transaction Type: {props.document.transactionType}</p>\r\n                    <p>Date Of Creation: {dayOfTheWeekName}, {monthName} {daySliced}, {year} </p>\r\n                </div>\r\n                <div>\r\n                    <p>Business Partner {props.document.businessPartner.name}</p>              \r\n                    <p>{props.document.businessPartner.city}</p>\r\n                    <p>{props.document.businessPartner.address}</p>\r\n                </div>\r\n                <div>Status: {props.document.status}</div>\r\n            </div>\r\n            <div className=\"form-wrapper\">\r\n            <input\r\n                className={\"price\" + (this.state.transformed === true ?\r\n                        ' transformed' : '')} \r\n                type=\"text\"\r\n                placeholder={(this.state.transformed === true ? \r\n                        'Search...' : \"\")}\r\n                maxLength=\"20\"\r\n                value={this.state.search} required\r\n                onChange={this.updatedSearch.bind(this)}\r\n            />\r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default documentDetails;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport TableRow from './TableRow/TableRow';\r\nimport Pagination from './Pagination/Pagination';\r\nimport TableSettings from './TableSettings/TableSettings';\r\nimport TableSettingsButton from './TableSettingsButton/TableSettingsButton';\r\nimport DocumentDetails from './DocumentDetails/DocumentDetails';\r\nimport documents from '../../data/documents.json';\r\n\r\nclass Documents extends Component {\r\n    render() {\r\n        const maxPerPage = 10;\r\n        let maxPages = 2;\r\n        if(this.props.data.length > 1){\r\n            maxPages = Math.ceil(this.props.data.length / maxPerPage);        \r\n        }\r\n\r\n        const indexOfLastElement = this.props.currentPage * maxPerPage;\r\n        const indexOfFirstElement = indexOfLastElement - maxPerPage;\r\n        const currentPageContent = documents.slice(indexOfFirstElement, indexOfLastElement);\r\n        const renderCurrentDocuments = currentPageContent.map(row => {\r\n            return (\r\n                <TableRow key={row._id} row={row} />\r\n            )\r\n        })\r\n\r\n        const renderCurrentDocument = currentPageContent.filter(row => {\r\n            return row._id === this.props.documentId\r\n        }).map(document => {\r\n            console.log(document);\r\n            return (\r\n                <DocumentDetails key={document._id} document={document}/>\r\n            )\r\n        });\r\n        //console.log(renderCurrentDocument[0]);\r\n\r\n        //console.log(currentPageContent);\r\n\r\n        return (\r\n            <div>\r\n                <div className={\"documents-wrapper\" + (!this.props.documentsDisplay ? \" invisible\" : \"\")}>\r\n                    <Pagination maxPages={maxPages} />\r\n                    <TableSettings />\r\n                    <TableSettingsButton />\r\n                    <table>\r\n                        <thead>\r\n                            <tr className=\"head\">\r\n                                <th className={!this.props.dateOfCreation ? \"invisible\" : \"\"}><button onClick={() => this.props.sortByStringHandler('dateOfCreation')}>Date of Creation</button></th>\r\n                                <th className={!this.props.dateOfRecording ? \"invisible\" : \"\"}><button onClick={() => this.props.sortByStringHandler('dateOfRecording')}>Date of Recording</button></th>\r\n                                <th className={!this.props.status ? \"invisible\" : \"\"}><button onClick={() => this.props.sortByStringHandler('status')}>Status</button></th>\r\n                                <th className={!this.props.transactionType ? \"invisible\" : \"\"}><button onClick={() => this.props.sortByStringHandler('transactionType')}>Transaction Type</button></th>\r\n                                <th className={!this.props.businessPartner ? \"invisible\" : \"\"}>Business Partner</th>\r\n                                <th className={!this.props.businessPartnerLocation ? \"invisible\" : \"\"}>Business Partner Location</th>\r\n                                <th className={!this.props.year ? \"invisible\" : \"\"}>Year</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {renderCurrentDocuments}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className=\"document-wrapper\">\r\n                    <div>\r\n                        {this.props.documentId}\r\n                        {renderCurrentDocument}\r\n\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentPage: state.currentPage,\r\n        dateOfCreation:  state.dateOfCreation,\r\n        dateOfRecording: state.dateOfRecording,\r\n        status:          state.status,\r\n        transactionType: state.transactionType,\r\n        businessPartner: state.businessPartner,\r\n        businessPartnerLocation: state.businessPartnerLocation,\r\n        year:            state.year,\r\n        documentsDisplay: state.documentsDisplay,\r\n        documentId: state.documentId\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Documents);","import React from 'react';\r\n\r\nconst about = () => {\r\n    return (\r\n        <div className=\"about-route\">\r\n            <h1>About the Application</h1>\r\n            <p><em>Warehouse Operations</em> is a demo front end application which provides a UI for displaying and managing receipt and delivery documents.</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default about;","import React from 'react';\r\n\r\nconst notfound = () => {\r\n    return (\r\n        <div className=\"NotFound\">\r\n            <h1 className=\"text-jumbo text-ginormous\">Oops!</h1>\r\n            <h2>We can't seem to find the page you're looking for.</h2>\r\n            <h6>Error code: 404</h6>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default notfound;","import React from 'react';\r\n\r\nconst footer = () => {\r\n    return (\r\n        <div className=\"container-fluid footer-wrapper\">\r\n            <div className=\"container\"> \r\n                <p>© Copyright 2019 The Dining Room | All Right Reserved.</p> \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default footer;","import React, {Component} from 'react'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Menu from '../components/Menu/Menu';\nimport Home from '../components/Home/Home';\nimport Documents from '../components/Documents/Documents';\nimport About from '../components/About/About';\nimport NotFound from '../components/NotFound/NotFound';\nimport Footer from '../components/Footer/Footer';\nimport Cover from '../assets/images/cover.png';\nimport documents from '../data/documents.json';\nimport '../assets/sass/main.scss';\n\nclass App extends Component {\n    state = { \n        directionName: {\n            name: 'asc'\n        },\n        documents: documents\n    }\n\n    sortByStringHandler = key => {\n        this.setState({\n            documents: documents.sort((a, b) => {\n                const asc = this.state.directionName[key] === 'asc';\n                if (a[key] < b[key]) {\n                    return asc ? -1 : 1;\n                } else if (a[key] > b[key]) {\n                    return asc ? 1 : -1;\n                } else {\n                    return 0;\n                }\n            }),\n\n            directionName: {\n                [key]: this.state.directionName[key] === 'asc'\n                ? 'desc'\n                : 'asc'\n            }\n        })\n    }\n\n    render () {\n        return (\n            <Router basename=\"/Warehouse-operations/\">\n                <header>\n                    <div className=\"container-fluid\">\n                        <div className=\"container\">\n                            <div className=\"cover-wrapper\">\n                                <img src={Cover} alt=\"warehouse\"/>\n                            </div>\n                        </div>\n                    </div>\n                </header>\n                <main>\n                    <div className=\"container-fluid\">\n                        <div className=\"container\">\n                            <div className=\"main-wrapper\">         \n                                <Menu/>\n                                <Switch>\n                                    <Route className=\"home-route\" path=\"/\" exact strict component={Home}/>\n                                    <Route \n                                        className=\"documents-route\" \n                                        path=\"/documents\" \n                                        exact strict\n                                        render={(props) => \n                                        <Documents\n                                            data={this.state.documents} \n                                            sortByStringHandler={this.sortByStringHandler}\n                                            {...props} />}\n                                    />\n                                 \n                                    <Route className=\"about-route\" path=\"/about\" exact strict component={About}/>\n                                    <Route className=\"not-found\" component={NotFound} />\n                                </Switch>\n                            </div>\n                        </div>\n                    </div>\n                </main>\n                <footer>\n                    <Footer />\n                </footer>\n            </Router>\n        )\n    }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n    currentPage: 0,\r\n    maxPages: '',\r\n    toggle: true,\r\n    dateOfCreation: true, \r\n    dateOfRecording: true,\r\n    status:          true,\r\n    transactionType: true,\r\n    businessPartner: true,\r\n    businessPartnerLocation: true,\r\n    year:           true,\r\n    documentsDisplay: true,\r\n    documentId: null, \r\n    documentDetailsDisplay: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        \r\n        case \"SET_INITIAL_PAGE\":\r\n        return {\r\n            ...state,\r\n            currentPage: 1\r\n        }\r\n\r\n        case \"SET_CURRENT_PAGE\":{\r\n            return {\r\n                ...state,\r\n                currentPage: parseInt(action.number)\r\n            }\r\n        }\r\n\r\n        case 'NEXT_PAGE':\r\n        if(state.currentPage === action.maxPages){\r\n            return {\r\n                ...state, \r\n                currentPage: parseInt(action.maxPages)\r\n            }\r\n        } else {\r\n            return {\r\n                ...state,\r\n                currentPage: parseInt(state.currentPage + 1)\r\n            }\r\n        }\r\n\r\n        case \"PREVIOUS_PAGE\":\r\n        if(state.currentPage <= 1){\r\n            return {\r\n                ...state,\r\n                currentPage: 1,\r\n            }\r\n        } else {\r\n            return {\r\n                ...state,\r\n                currentPage: parseInt(state.currentPage - 1),\r\n            }\r\n        }\r\n\r\n        case \"TOGGLE\":{\r\n            return {\r\n                ...state,\r\n                toggle: !state.toggle\r\n            }\r\n        }\r\n\r\n        case \"DATE_OF_CREAT\":{\r\n            return {\r\n                ...state,\r\n                dateOfCreation: !state.dateOfCreation\r\n            }\r\n        }\r\n\r\n        case \"DATE_OF_RECORD\":{\r\n            return {\r\n                ...state,\r\n                dateOfRecording: !state.dateOfRecording\r\n            }\r\n        }\r\n\r\n        case \"STATUS\":{\r\n            return {\r\n                ...state,\r\n                status:  !state.status\r\n            }\r\n        }\r\n\r\n        case \"TRANSACTION_TYPE\":{\r\n            return {\r\n                ...state,\r\n                transactionType:  !state.transactionType\r\n            }\r\n        }\r\n\r\n        case 'BUSINESS_PARTNER':{\r\n            return {\r\n                ...state,\r\n                businessPartner:  !state.businessPartner\r\n            }\r\n        }\r\n\r\n        case \"BUSINESS_PARTNER_LOC\":{\r\n            return {\r\n                ...state,\r\n                businessPartnerLocation:  !state.businessPartnerLocation\r\n            }\r\n        }\r\n\r\n        case \"YEAR\":{\r\n            return {\r\n                ...state,\r\n                year:  !state.year\r\n            }\r\n        }\r\n        case \"DOCUMENTS_DISPLAY\": {\r\n            return {\r\n                ...state,\r\n                documentsDisplay: true\r\n            }\r\n        }\r\n\r\n        case \"DOCUMENT_DETAILS_DISPLAY\": {\r\n            return {\r\n                ...state,\r\n                documentsDisplay: false,\r\n                documentId: parseInt(action.documentId),\r\n                documentDetailsDisplay: true\r\n            }\r\n        }\r\n\r\n        default:\r\n        return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport reducer from './store/reducer';\nconst store = createStore(reducer);\n\nReactDOM.render(<Provider  store={store}><App/></Provider>, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}